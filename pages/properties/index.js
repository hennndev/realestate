import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { BsFilter } from 'react-icons/bs'
import { utilsRoute } from '../../consts/consts'
import Property from '../../components/Properties/Property'
import NotFound from '../../components/Properties/NotFound'
import FilteredProperties from '../../components/Properties/FilteredProperties'



const Properties = ({data}) => {

    const router = useRouter()
    
    const [isFilter, setIsFilter] = useState(false)
    const [isServer, setIsServer] = useState(false)
    const [propertiesData, setPropertiesData] = useState(data)
    const lengthQueries = Object.keys(router.query).length

    useEffect(() => {
        if(lengthQueries < 1 && isServer) {
            setPropertiesData(data)
        }
    }, [lengthQueries])
    

    return (
        <div>
            <Head>
				<title>Properties | RSTATE</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

            <div className="px-5 py-10">
                <div className="container">
                    <div className="btn p-2 md:hidden w-max flex items-center space-x-2 mb-5" onClick={() => setIsFilter(!isFilter)}>
                        <BsFilter className="text-xl"/>
                        <p>Filter Properties</p>
                    </div>
                    <FilteredProperties 
                        isFilter={isFilter} 
                        setPropertiesData={setPropertiesData} 
                        setIsFilter={setIsFilter} 
                        setIsServer={setIsServer} 
                        isServer={isServer}/>

                    <div className="mt-5 flex flex-col space-y-5">
                        {propertiesData?.length > 0 ? propertiesData?.map(data => (
                            <Property property={data} key={data.id}/>
                        )) : <NotFound/>}
                    </div>
                </div>
            </div>
        </div>
    )
}



export const getServerSideProps = async(context) => {

    const resultQueries = utilsRoute(context.query)
    
    const res = await fetch(`https://bayut.p.rapidapi.com/properties/list?locationExternalIDs=5002%2C6020&hitsPerPage=10&page=0&lang=en&sort=city-level-score${resultQueries}`, {
		"method": "GET",
		"headers": {
            "x-rapidapi-host": "bayut.p.rapidapi.com",
            "x-rapidapi-key": "7bef28009dmshedc105df6814739p15d209jsn096ca5e8e8f0"
        }
	})
    const data = await res.json()

    if (!data) {
        return {
          notFound: true,
        }
      }

    return {
        props: {
            data: data.hits
        }
    }
}

export default Properties
